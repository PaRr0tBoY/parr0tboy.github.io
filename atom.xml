<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博客 | ACID</title>
  
  <subtitle>Acid的私有空间</subtitle>
  <link href="https://www.ac1d.space/atom.xml" rel="self"/>
  
  <link href="https://www.ac1d.space/"/>
  <updated>2024-09-27T15:48:56.213Z</updated>
  <id>https://www.ac1d.space/</id>
  
  <author>
    <name>Acid</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Authenticate</title>
    <link href="https://www.ac1d.space/2024/09/27/null/"/>
    <id>https://www.ac1d.space/2024/09/27/null/</id>
    <published>2024-09-27T15:48:40.000Z</published>
    <updated>2024-09-27T15:48:56.213Z</updated>
    
    <content type="html"><![CDATA[<p>This message is used to verify that this feed (feedId:62517223568964608) belongs to me (userId:60564332642772992). Join me in enjoying the next generation information browser <a href="https://follow.is/">https://follow.is</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This message is used to verify that this feed (feedId:62517223568964608) belongs to me (userId:60564332642772992). Join me in enjoying th</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mac通用指南其一之访达</title>
    <link href="https://www.ac1d.space/2024/09/27/mac-universal-guide-1/"/>
    <id>https://www.ac1d.space/2024/09/27/mac-universal-guide-1/</id>
    <published>2024-09-27T14:33:51.000Z</published>
    <updated>2024-09-27T15:04:23.890Z</updated>
    
    <content type="html"><![CDATA[<p>此篇介绍 macbook 系统应用访达的进阶使用</p><span id="more"></span><ul><li><p>在<code>通用</code>中</p><ul><li>可以更改桌面上显示的文件,最好取消勾选<code>外置硬盘</code>,因为那是安装软件所用的 dmg 文件,如果有太多 dmg 文件未被推出,将会严重占据桌面空间</li><li>dmg 文件可能模仿了古早电脑插入光盘安装软件的形式,这大概也是为什么挂载 dmg 文件后还要将软件拖入本机的应用程序文件夹</li></ul></li><li><p>在<code>标签</code>中</p><ul><li>你可以添加更多标签;</li><li>点击标签左侧的色圈并更换标签的颜色;</li><li>右键点击标签更改它的命名,例如将<code>红色标签</code>更名为重要;</li><li>标签右侧的复选框,当标记为<code>-</code>时代表它们被默认选中,你可以多次点击直到复选框状态为空(不显示)或勾选(显示),以在边栏显示或隐藏此标签;</li><li>你可以把自定义的标签拖拽到下方的框选区域,这样下次你右键点击文件时,可以快速把该文件添加到此分类;<img src="/Users/acid/Library/Application Support/typora-user-images/截屏2024-08-13 15.15.08.png" alt="截屏2024-08-13 15.15.08" style="zoom:50%;" /></li></ul></li><li><p>在<code>边栏</code>中</p><ul><li>可以更改<code>个人收藏</code>中显示的文件夹,建议把文稿,下载,音乐,图片等需要频繁访问的文件夹都勾选上,其余按需勾选;</li><li><code>位置</code>中的外置磁盘同样可以取消勾选掉;<img src="/Users/acid/Library/Application Support/typora-user-images/截屏2024-08-13 15.26.26.png" alt="截屏2024-08-13 15.26.26" style="zoom:50%;" /></li></ul></li><li><p>在高级中</p><ul><li><p>将<code>执行搜索时</code>的操作更改为搜索<code>当前文件夹</code>而不是<code>整台 mac</code>,这更符合 Windows 系统下的操作习惯,也更”人类”,毕竟当我们在某个文件夹搜索时,我们想找的文件往往就在那个文件夹中,而不需要在整个磁盘查找;</p></li><li><p>如果你不太熟悉文件系统管理的操作,最好把所有警告有关的设置都打开;</p></li><li><p>勾选所有<code>将以下位置的文件夹保持在顶部</code>的所有项目,这样当一个文件夹中既有文件夹又有很多不同类型的文件的时候,就可以将文件夹分层出来置于顶部,杂七杂八的文件就自动”沉底”了,这样有助于文件管理更有序;</p><img src="/Users/acid/Library/Application Support/typora-user-images/截屏2024-08-13 15.28.44.png" alt="截屏2024-08-13 15.28.44" style="zoom:50%;" /></li></ul></li><li><h4 id="🔧-工具栏"><a href="#🔧-工具栏" class="headerlink" title="🔧 工具栏"></a>🔧 工具栏</h4><p>当你右键点击或用触控板双指轻击访达窗口顶部时,你会看到自定义工具栏的选项:  </p></li><li><p>在自定义工具栏的窗口中,你可以把一些有用的项目拖入工具栏,或者将默认的一组项目拖入工具栏;</p></li><li><p>除此之外,你还可以更改工具的显示形式,例如图标和文本,仅图标和仅文本,我更喜欢仅图标,这样更简洁且一目了然,也更省空间,如果你拖入太多项目到工具栏,一旦位置不足,多出来的项目就会被隐藏;</p></li><li><p>你可能不知道,按住⌘键,你可以将文件或文件夹拖动到工具栏,打个比方,你可以安装⌘键把 photoshop 拖到工具栏,并拖动一张图片到工具栏处的 photoshop 图标,这样就可以快速在 photoshop 中开始编辑该图片,你还可以把这套操作应用到别的软件!</p><img src="/Users/acid/Library/Application Support/typora-user-images/截屏2024-08-13 15.38.46.png" alt="截屏2024-08-13 15.38.46" style="zoom:50%;" /></li><li><h4 id="⌨️-快捷键"><a href="#⌨️-快捷键" class="headerlink" title="⌨️ 快捷键"></a>⌨️ 快捷键</h4><p>想要进阶访达,快捷键必不可少,以下是一些相当常用的快捷键及其操作:  </p><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td>⌘<code>I</code></td><td>打开&#x2F;关闭当前选中文件或文件夹的简介</td></tr><tr><td>⌘<code>T</code></td><td>新建标签页</td></tr><tr><td>⌘<code>N</code></td><td>新建访达窗口</td></tr><tr><td>⌘<code>数字</code></td><td>快速更改文件的显示形式</td></tr><tr><td><code>长按/点击</code> ␣</td><td>长按<code>空格</code>预览选中文件&#x2F;文件夹,释放则关闭预览,单机空格打开&#x2F;关闭预览,同时按住<code>shift</code>还可以放慢动画</td></tr></tbody></table><p>更多快捷键,可以在顶部菜单栏寻找;  </p></li><li><h4 id="🕹️-菜单栏"><a href="#🕹️-菜单栏" class="headerlink" title="🕹️ 菜单栏"></a>🕹️ 菜单栏</h4><p>在 macOS 中,软件的大部分操作逻辑都被放在顶部菜单栏的左侧,访达也不例外,如果你想快速且全面的上手一款软件,这个位置会是你第一个查看的地方  </p></li><li><p>菜单栏的所有项目的下拉菜单选项都由操作名和快捷键组成,你可以直接点击执行这个操作,也可以记住快捷键,下次直接调用快捷键呼出这个操作;</p></li><li><p>有的选项没有被分配快捷键,可以在<code>系统设置-键盘-快捷键</code>处点选<code>App 快捷键</code>并添加自定义快捷键</p><p>![截屏2024-08-13 16.41.37](&#x2F;Users&#x2F;acid&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;截屏2024-08-13 16.41.37.png){:height 1235, :width 1250}  </p></li><li><p>在<code>显示</code>的下拉菜单中</p><ul><li><p>可以选择文件的显示形式,可根据需求选择</p></li><li><p>把除了<code>显示所有标签页</code>的所有隐藏的项目都勾选上,这样就可以始终看到文件的路径,工具栏,状态栏,标签栏等常用项目了,如果你不勾选显示文件的路径,同样可以按住 option 键临时查看当前文件路径</p><img src="/Users/acid/Pictures/截图/截屏2024-08-13 16.45.13.png" alt="截屏2024-08-13 16.45.13" style="zoom:50%;" /></li><li><p>进一步还可以点击<code>查看显示选项</code>以更改图标大小,文字大小,标签位置等显示选项,不过这些设置只作用于当前打开的文件夹,可以点击用作默认,这样将来新建的文件夹也会像当前设置的样子显示文件,但不会影响现有的文件夹；</p><img src="/Users/acid/Library/Application Support/typora-user-images/截屏2024-08-13 16.52.17.png" alt="截屏2024-08-13 16.52.17" style="zoom:50%;" /></li></ul></li><li><p>在前往项目的下拉菜单中</p><ul><li>可以快速访问主要文件夹，但是还是从侧栏访问更快捷，也可以由此访问nas服务器</li></ul></li></ul><hr><p>以上就是有关访达的内容，下来将介绍系统设置</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;此篇介绍 macbook 系统应用访达的进阶使用&lt;/p&gt;</summary>
    
    
    
    <category term="mac" scheme="https://www.ac1d.space/categories/mac/"/>
    
    
    <category term="教程" scheme="https://www.ac1d.space/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="科技" scheme="https://www.ac1d.space/tags/%E7%A7%91%E6%8A%80/"/>
    
    <category term="技巧" scheme="https://www.ac1d.space/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>关于圆的设计</title>
    <link href="https://www.ac1d.space/2024/06/04/null/"/>
    <id>https://www.ac1d.space/2024/06/04/null/</id>
    <published>2024-06-04T07:08:41.000Z</published>
    <updated>2024-06-06T15:12:52.000Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
      
    
    
    
    <category term="设计" scheme="https://www.ac1d.space/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo框架迁移记录</title>
    <link href="https://www.ac1d.space/2024/06/01/hexo_framework/"/>
    <id>https://www.ac1d.space/2024/06/01/hexo_framework/</id>
    <published>2024-06-01T09:50:31.000Z</published>
    <updated>2024-09-27T15:03:41.534Z</updated>
    
    <content type="html"><![CDATA[<p>题记：本篇介绍用Hexo框架构建博客的经历</p><span id="more"></span><p>去年弄了基于wordpress的博客，然而碍于备案太麻烦，专门去国外平台租了服务器，买了域名，一番折腾后终于把网站挂在了租来的服务器，不过没几天就被黑客打下来了，我又没有什么运维知识，最终只能不了了之。</p><p>后续听说了Github Pages，由Github免费提供的网页寄存服务，可以存放静态网页，包括博客、项目文档、甚至整本书。最重要的是因为网页托管在github那边，因此几乎没有被黑客攻击的风险。</p><p>于是今年五月初心血来潮将博客部署在GitHubPages，随便找了个jekyll主题，然后把默认的url解析到去年购买的闲置域名ac1d.cc，配置好cname后自动转发到www前缀，在这之后就放着没管，只是有兴致时写一两篇博文，往往很短，只是随手一记。</p><p>这期间上网查阅资料时偶然打开了sukka的博客，顿觉界面十分清爽，三栏布局深得我心。迅速阅览后得知sukka的博客是用hexo框架建立的，于是在阅读官方文档后，我在计算机上安装了Hexo框架，并init了第一个博客文件夹，一开始我想用metarial主题，但是不知为何总是报一堆错，metarial的文档写的也很烂，令人不知所云，最后选择了icarus主题，部署好后终端键入’hexo server’，然后就可以在localhost的4000端口打开博客的预览界面。<br>一番修改后就变成了现在的样子，具体变更可以参阅导航栏上的变更日志。</p><div>    <section id="comments" class="comments">      <style>        .utterances{max-width: 100%;}      </style>        <script src="https://utteranc.es/client.js"                repo="PaRr0tBoY/parr0tboy.github.io"                issue-term="title"                theme="transparent_dark"                crossorigin="anonymous"                async>        </script>  </section></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;题记：本篇介绍用Hexo框架构建博客的经历&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.ac1d.space/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="技术" scheme="https://www.ac1d.space/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="日记" scheme="https://www.ac1d.space/tags/%E6%97%A5%E8%AE%B0/"/>
    
    <category term="Hexo框架" scheme="https://www.ac1d.space/tags/hexo%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Arc浏览器Win版常见问题解决方法</title>
    <link href="https://www.ac1d.space/2024/05/29/arc_browser_problems_solved/"/>
    <id>https://www.ac1d.space/2024/05/29/arc_browser_problems_solved/</id>
    <published>2024-05-29T13:14:33.000Z</published>
    <updated>2024-09-27T15:03:51.632Z</updated>
    
    <content type="html"><![CDATA[<p>题记：本文解决Arc浏览器中的常见错误</p><span id="more"></span><p>浏览器可说是计算机系统中最重要的软件之一，或许没有之一。而Arc浏览器则是众多主流浏览器选择之外最为别出心裁的一个Chromium分支。</p><p>少数派用户PlaytyHsu将Arc翻译为弧光，私以为这个翻译很准确，开发Arc浏览器的公司常常将蓝紫色融入他们的设计中，看起来很像弧光，而Arc本身也有这个意思。</p><p>本文不展开介绍Arc的优点，前人之述备矣，这篇文章的主要使命是提供一些Windows版本Arc中常见的问题的解决办法。</p><blockquote><p>文章中Arc版本：1.3.2 (30214)，如果您的版本落后，再次运行Arcinstaller或点击左上角Arc图标Check for Updates。</p></blockquote><hr><h3 id="无法注册账号-无法登录-无法跨平台同步标签"><a href="#无法注册账号-无法登录-无法跨平台同步标签" class="headerlink" title="无法注册账号&#x2F;无法登录&#x2F;无法跨平台同步标签"></a>无法注册账号&#x2F;无法登录&#x2F;无法跨平台同步标签</h3><p>以克拉施为例：</p><ul><li>全局魔法</li><li>系统代理</li><li>解除Arc浏览器uwp联网限制</li><li>Tun mode</li><li>切换节点</li><li>耐心等待</li></ul><p><img src="https://img2.imgtp.com/2024/05/30/NvOzVUvG.png" alt="img">按钮变灰后需要等一会</p><p>因为特殊原因，Arc的登录&#x2F;同步服务器在大陆一般是ping不通的，因此除魔法外别无他法，即使使用魔法仍旧要等个十秒左右，因人而异，刚开始beta的时候，也有人直连注册登录成功的。</p><p>UWP应用联网限制就是Windows系统限制UWP应用访问本地回环（localhost,127.0.0.1）,但是克拉施需要应用能够把网络请求传给本地回环才可以代理,所以解除了UWP限制以后UWP应用的联网就走clash了,此时登录注册正是时候，但是如此一来就会导致hosts文件对Arc发送网络请求的限制失效,因为联网请求被发送给了代理节点的中转服务器,而中转服务器没有被hosts文件解析到本地回环,所以如果开了代理还解除了限制就会导致Arc实际上走clash做了一系列的联网请求,其结果就是能打开但是很慢，因为和服务器通信需要时间，如果你的节点延迟高网速还慢，Arc的启动速度只会更慢，因此登录注册成功后不开代理或者重新启用Arc的联网限制，Arc的联网请求就会全部解析到localhost从而做到秒开。<br><strong>Arc的同步服务器:</strong></p><blockquote><p>o298668.ingest.sentry.io:443</p></blockquote><p><strong>Arc的注册登录服务器：</strong></p><blockquote><p>或许是以下之一</p><p><a href="http://api.segment.io:443/">http://api.segment.io:443</a></p><p><a href="http://clientstream.launchdarkly.com:443/">http://clientstream.launchdarkly.com:443</a></p><p><a href="http://mobile.launchdarkly.com:443/">http://mobile.launchdarkly.com:443</a></p></blockquote><hr><h3 id="Arc浏览器关闭后无法再次打开或者完全无法打开"><a href="#Arc浏览器关闭后无法再次打开或者完全无法打开" class="headerlink" title="Arc浏览器关闭后无法再次打开或者完全无法打开"></a>Arc浏览器关闭后无法再次打开或者完全无法打开</h3><p><strong>建议先尝试在系统应用设置中修复或重置Arc，如果此举没有效果，再考虑以下方法。</strong></p><p><strong>可能原因分析：</strong></p><p>这是大陆用户中最常见的问题，对于我自己，情况是不联网或者全局魔法才可以打开，而且后者比前者等待的时间要久，这或许意味着Arc在打开前有可能要经过一个国内无法ping通的验证服务器，毕竟这是个登录为必选项的浏览器。</p><p>我推测Arc在ping通此服务器前是不会打开窗口的，如果访问超时，Arc会不断尝试对该服务器发送网络请求，而如果处于离线状态则不会尝试连接；因此我用fiddler抓包了arc浏览器启动时的网络请求：</p><p><img src="https://img2.imgtp.com/2024/05/30/OraTlS7Q.png" alt="img">用Fiddler抓包</p><p><strong>解决办法：</strong></p><p>在一次失败的启动后最终筛选出了几个嫌疑较大的URL，并将它们全部解析到本地回环：</p><blockquote><p>127.0.0.1 o298668.ingest.sentry.io</p><p>127.0.0.1 mobile.launchdarkly.com</p><p>127.0.0.1 clientstream.launchdarkly.com</p><p>127.0.0.1 update.googleapis.com</p><p>127.0.0.1 api.segment.io</p></blockquote><p>将上述文本<strong>粘贴到hosts文件</strong>(C:\WINDOWS\system32\drivers\etc)中后，<strong>打开终端</strong>敲入：</p><blockquote><p>ipconfig &#x2F;flushdns</p></blockquote><p><strong>刷新DNS解析</strong>，然后尝试ping刚才被解析到本地的其中一个域名，例如：</p><blockquote><p>ping o298668.ingest.sentry.io</p></blockquote><p>返回”<strong>来自 127.0.0.1 的回复: 字节&#x3D;32 时间&lt;1ms TTL&#x3D;128</strong>“则成功。</p><p>这样处理后理论上当Arc尝试向上述URL发送网络请求时就会连接到localhost，而不会因为访问超时而不打开窗口。</p><p>再次确认arc后台完全清除后尝试打开，发现已经可以正常打开，速度也快了不少。</p><blockquote><p>在你的电脑上可能不会这么顺利，但这个方法对于我是有用的。</p></blockquote><p>PS：Arc在使用过程中崩溃或人为关闭后，不要立刻再次打开，等待2~3秒后再次打开，否则也有几率导致无法重新打开；</p><p>如果还是不行，尝试打开全局魔法，点击左上角arc图标找到Setting中的Arc sync位置打开同步按钮，看到小字sync is working则成功，这个方法比较玄学，不能确定是否真的有效。</p><p>另外，解除Arc的UWP联网限制可能是必要的，有关方法请自行查阅资料。</p><hr><h3 id="无法创建新标签页，中文搜索跳转到无关标签"><a href="#无法创建新标签页，中文搜索跳转到无关标签" class="headerlink" title="无法创建新标签页，中文搜索跳转到无关标签"></a>无法创建新标签页，中文搜索跳转到无关标签</h3><p>Arc浏览器没有新标签页的概念，快捷键 <strong>ctrl+t</strong> 跳出来的搜索框就是新标签页；</p><p><strong>方法一：</strong></p><p>Arc浏览器暂未适配中文输入法，在中文部分之后敲一个空格即可解决问题，不过每次搜索都多按一个空格很麻烦，我的解决方式是写一个ahk脚本，逻辑是<strong>将回车键重新绑定</strong>为：</p><p><strong>两个空格-延迟150ms-回车</strong></p><p>这样解决了问题，而且当使用输入法时必须输入英文时，两个空格可以保证英文确实落在搜索框内，且不会因为缺少空格导致跳转到其他界面。</p><p>代码(ahk版本为v2)：</p><p><strong>方法二（推荐）：</strong></p><p>使用Utools<strong>网页快开</strong>插件，将Arc浏览器设置为默认，其实这是我更推荐的方式，Utools很好用。</p><p><img src="https://img2.imgtp.com/2024/05/30/eOzbP56p.png" alt="img">用Utools充当Arc浏览器的搜索框架</p><hr><h3 id="有关侧栏迷你播放器"><a href="#有关侧栏迷你播放器" class="headerlink" title="有关侧栏迷你播放器"></a><strong>有关侧栏迷你播放器</strong></h3><blockquote><p>侧栏迷你播放器是arc在1.3.2.30214版本更新中新增的设计，主要功能是当有标签播放音频时在侧边栏显示一个迷你播放器，当鼠标悬浮时会显示音频的标题;</p></blockquote><p>然而有一个很抽象的问题是播放器标题直接来自于标签页的标题，而不是调用网页提供的api，我相信这是因为此功能尚处于早期开发阶段。这就导致如果标签页的标题不随所播放音频而改变的话，那么播放器的标题就不会改变，而Apple Music的网页端就是这样的标签页。</p><p>于是我写了一个js脚本用于解决该问题，脚本逻辑是从页面中获取歌曲的标题，再将其命名于标签页标题，设置一个间隔1000ms的监视器，并将脚本部署到油猴扩展，这样就完美解决了问题。你也可以为有同样问题的网站写一个类似脚本。</p><hr><p>文章涉及的大部分文件，以及一些快捷键总结都打包放到网盘了，使用方法参阅readme.md，链接：</p><blockquote><p><a href="https://www.alipan.com/s/Aqy7dSLCAiM">https://www.alipan.com/s/Aqy7dSLCAiM</a></p></blockquote><p>以上只包括我遇到过的问题，如果还有其它有关问题，参阅以下文章：</p><ol><li><p>【Arc for windows beta版踩坑记录-哔哩哔哩】 <a href="https://b23.tv/pS8GEM8">https://b23.tv/pS8GEM8</a></p></li><li><p>【Arc for windows 几个问题解决方法。-哔哩哔哩】 <a href="https://b23.tv/8G1n1Na">https://b23.tv/8G1n1Na</a></p></li></ol><p>上述文章总结自个人使用经验，具体情况与效果可能随软硬件差别和时间推移(2024.5.29)有所改变；如果有无法独立解决的Arc浏览器相关问题，可发送至我的邮箱（<a href="mailto:&#112;&#x61;&#114;&#114;&#x6f;&#116;&#98;&#111;&#x79;&#56;&#56;&#x38;&#64;&#111;&#x75;&#116;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#x6d;">&#112;&#x61;&#114;&#114;&#x6f;&#116;&#98;&#111;&#x79;&#56;&#56;&#x38;&#64;&#111;&#x75;&#116;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#x6d;</a>），有闲会看。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;题记：本文解决Arc浏览器中的常见错误&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://www.ac1d.space/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="日记" scheme="https://www.ac1d.space/tags/%E6%97%A5%E8%AE%B0/"/>
    
    <category term="bugfixes" scheme="https://www.ac1d.space/tags/bugfixes/"/>
    
    <category term="Arc浏览器" scheme="https://www.ac1d.space/tags/arc%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Utools Crack</title>
    <link href="https://www.ac1d.space/2024/05/29/utools_crack/"/>
    <id>https://www.ac1d.space/2024/05/29/utools_crack/</id>
    <published>2024-05-29T13:14:33.000Z</published>
    <updated>2024-06-06T15:12:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>破解版本：utools 4.0.1</p><span id="more"></span><p>下载地址：<a href="https://www.cmdpe.com/post/373.html">https://www.cmdpe.com/post/373.html</a></p><p>来自52破解：<a href="https://www.52pojie.cn/thread-1830128-1-1.html">https://www.52pojie.cn/thread-1830128-1-1.html</a></p><p>所需工具：npm包asar</p><p>破解命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">asar e app.asar app</span><br><span class="line"></span><br><span class="line">asar p app app.asar</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>破解原理：</p><p>现成app.asar包</p><p>可选：在解压后的app文件夹下导航到该目录并修改index.js中的搜索框占位符</p><p>（\utools\resources\app\node_modules\configuration\index.js）</p><p>禁用更新方法：<a href="https://www.cnblogs.com/vbig/p/17078902.html">https://www.cnblogs.com/vbig/p/17078902.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;破解版本：utools 4.0.1&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://www.ac1d.space/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="效率" scheme="https://www.ac1d.space/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="生产力" scheme="https://www.ac1d.space/tags/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
    <category term="破解" scheme="https://www.ac1d.space/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Chatgpt的最佳实践</title>
    <link href="https://www.ac1d.space/2024/05/25/chatgptsolvissues/"/>
    <id>https://www.ac1d.space/2024/05/25/chatgptsolvissues/</id>
    <published>2024-05-25T13:14:33.000Z</published>
    <updated>2024-09-27T15:03:58.225Z</updated>
    
    <content type="html"><![CDATA[<p>题记：本文介绍如何使用Chatgpt解决实际问题</p><span id="more"></span><h3 id="实践一"><a href="#实践一" class="headerlink" title="实践一"></a><a href="#header-3"></a>实践一</h3><p>Arc的Windows版本最近更新了一个侧栏迷你播放器，但是有一个致命问题：就是某些网站播放音频时，播放器无法正确获得歌曲标题，我发现它显示的标题来自相应标签自己的标题，而我是用的网页音乐播放器是am，am不会根据当前播放的歌曲改变标签标题，因此mini播放器也就无法显示正确的歌曲标题，但是打开网页控制台就可以找到歌曲的标题作者等信息所对应的元素属性名字，这意味着可以通过撰写一个js脚本，使得标签标题随着歌曲信息的元素属性更名，每一秒检查一次，并将其挂载在油猴扩展运行，于是我向ChatGPT描述了我的需求，并得到了一段可行的代码。<br><a href="https://chatgpt.com/share/5d0af45f-3da2-480f-b534-ff2efff075dd">https://chatgpt.com/share/5d0af45f-3da2-480f-b534-ff2efff075dd</a>  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// ==UserScript==</span><br><span class="line">// @name         AMTITLE</span><br><span class="line">// @namespace    http://tampermonkey.net/</span><br><span class="line">// @version      2024-05-25</span><br><span class="line">// @description  try to take over the world!</span><br><span class="line">// @author       You</span><br><span class="line">// @match        https://music.apple.com/*</span><br><span class="line">// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=apple.com</span><br><span class="line">// @grant        none</span><br><span class="line">// ==/UserScript==</span><br><span class="line"></span><br><span class="line">function updateTitle() &#123;</span><br><span class="line">    var audioElement = document.getElementById(&#x27;apple-music-player&#x27;);</span><br><span class="line"></span><br><span class="line">    if (audioElement) &#123;</span><br><span class="line">        var trackTitle = audioElement.title;</span><br><span class="line"></span><br><span class="line">        if (trackTitle) &#123;</span><br><span class="line">            document.title = trackTitle;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置一个定时器定期检查音乐名称</span><br><span class="line">setInterval(updateTitle, 1000); // 每秒检查一次</span><br></pre></td></tr></table></figure><p>这以后am的标签名字可以动态的随歌曲名字变化，因此mini播放器也可以做到了。  </p><h3 id="实践二"><a href="#实践二" class="headerlink" title="实践二"></a><a href="#header-3"></a>实践二</h3><p>arc浏览器并不支持中文输入法，这就导致了不管是手动重命名标签或文件夹，还是搜索，都需要在中文部分后打一个空格，再回车才能好使，因此如果有一个脚本能够省去按空格这一步将会很方便，考虑到使用中文输入一整句话的时候并不是一次打完整句话，而是需要不断按空格，却只用按一次回车，因此把回车键绑定为“输入两次空格并延时n毫秒再输入空格”，就可以正常的在arc中使用中文输入法，两次空格是因为用输入法的过程中输入英文单词如果没有识别出来需要按回车来让它以字母的形式打出来而不是一段怪异且不成文的中文，这样子一个空格和一个回车则无法正确在中文部分后面添加到空格，则无法正确搜索。  </p><p>要实现这个脚本需要用到autohotkey，因为ahk v1已经被废弃，所以采用了v2，向ChatGPT描述了需求后，得到了想要的脚本代码，运作无误，很好，但是有一个问题就是这个脚本是全局的，意味着使用其他软件的时候同样奏效，这就很麻烦，所以添加了一个要求，“只有聚焦到特定窗口的时候才会生效”，得到相应代码后，运作无误，问题解决。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#Requires AutoHotkey v2.0</span><br><span class="line"></span><br><span class="line">; 设定窗口标题</span><br><span class="line">TargetWindowTitle := &quot;Arc&quot;</span><br><span class="line"></span><br><span class="line">; 监听回车键，只在指定窗口生效</span><br><span class="line">#HotIf WinActive(TargetWindowTitle)</span><br><span class="line"></span><br><span class="line">Enter:: &#123;</span><br><span class="line">    ; 发送一个空格</span><br><span class="line">    Send(&quot;  &quot;)</span><br><span class="line">    ; 等待300毫秒</span><br><span class="line">    Sleep(150)</span><br><span class="line">    ; 发送回车</span><br><span class="line">    Send(&quot;&#123;Enter&#125;&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#HotIf</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><a href="#header-3"></a>总结</h3><p>以上两个ChatGPT实践帮助我省去了深入了解js和ahk语法的功夫，因此我有更多的余裕专注于其他事情，我只需要想办法搞清楚我的需求，并清楚的表述出来一切问题就能迎刃而解，综上所述使用chatgpt解决实际问题最重要的还是分析清楚问题的关键，才有可能得到理想答案，事半功倍。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;题记：本文介绍如何使用Chatgpt解决实际问题&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.ac1d.space/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="效率" scheme="https://www.ac1d.space/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="工具" scheme="https://www.ac1d.space/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>用DNSBench找出解析域名速度最快的DNS</title>
    <link href="https://www.ac1d.space/2024/05/24/dnsbench/"/>
    <id>https://www.ac1d.space/2024/05/24/dnsbench/</id>
    <published>2024-05-24T13:14:33.000Z</published>
    <updated>2024-06-06T15:12:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>省流：最后还是没能裸连Github •ᴗ•💧</p><span id="more"></span><p>不挂t总是上不去Github，要不就是加载得巨慢无比，一个延迟点的公共DNS或许可以解决问题，遂在网络上搜索相关信息，找到一个叫做<strong>DNSBench</strong>的软件，内含许多公共DNS服务器的ip，而且支持自己添加DNS，只需一键就可开始测试不同DNS的解析速度，并对比：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">223.5.5.5 alibaba</span><br><span class="line">119.29.29.29 tencent</span><br></pre></td></tr></table></figure><p>![DNSBENCH用户界面](..\img\dns benchmark.jpg)</p><p>得出腾讯和阿里的公共DNS解析速度较快，于是把阿里DNS设置成首选DNS，腾讯的设为备用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;省流：最后还是没能裸连Github •ᴗ•💧&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://www.ac1d.space/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="效率" scheme="https://www.ac1d.space/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="生产力" scheme="https://www.ac1d.space/tags/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
    <category term="dns" scheme="https://www.ac1d.space/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>Git见解和常用指令</title>
    <link href="https://www.ac1d.space/2024/05/23/git_command/"/>
    <id>https://www.ac1d.space/2024/05/23/git_command/</id>
    <published>2024-05-23T13:14:33.000Z</published>
    <updated>2024-06-06T15:12:52.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Distributed-is-the-new-centralized</p></blockquote><span id="more"></span><p>在阅读git的文档的过程中看到这句话，感觉非常精髓。</p><p>是说版本控制分为本地版本控制系统、集中化(Centralized)版本控制系统以及分布式(Distributed)版本控制系统，其中：</p><ol><li><p>本地版本控制中，最流行的一种是RCS，其工作原理是在硬盘上保存补丁集（补丁是指文件修订前后的变化）；通过应用所有的补丁，可以重新计算出各个版本的文件内容；</p></li><li><p>为了让在不同系统上的开发者协同工作，集中化的版本控制系统（Centralized Version Control Systems，简称 CVCS）应运而生，比较具有代表性的比如CVS、Subversion、Perforce等，都有一个<strong>单一</strong>的<strong>集中管理</strong>的服务器，保存所有文件的修订版本，协同工作的机器都连接到此地，拉取新文件或是推送更新；</p></li></ol><p>但是如果中心服务器宕机或磁盘损坏，CVCS必然会出现一定的问题，本地版本控制系统也存在类似的问题，只要整个项目的历史记录被保存在单一位置，就有丢失所有历史更新记录的风险；</p><ol start="3"><li>于是分布式版本控制系统（Distributed Version Control System，简称 DVCS）面世了。 在这类系统中，像 Git、Mercurial 以及 Darcs 等，客户端并不只提取最新版本的文件快照， 而是把代码仓库完整地镜像下来，包括完整的历史记录。 这么一来，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。 因为每一次的克隆操作，实际上都是一次对代码仓库的完整备份。</li></ol><p>在分布式版本控制系统中，每一个客户端都相当于CVCS中的中心服务器，这样最大程度的确保了历史版本更新文件的安全性，另外，许多这类系统都可以指定和若干不同的远端代码仓库进行交互。籍此，你就可以在同一个项目中，分别和不同工作小组的人相互协作。 你可以根据需要设定不同的协作流程，比如层次模型式的工作流，而这在以前的集中式系统中是无法实现的。</p><h3 id="Git的运作逻辑"><a href="#Git的运作逻辑" class="headerlink" title="Git的运作逻辑"></a><a href="#header-3"></a>Git的运作逻辑</h3><p>每次提交更新或保存项目状态时，Git都会给当前所有文件创建一个快照，并保存快照的索引，如果有未作修改的文件，出于效率，Git不会重新存储此文件，而只保留一个链接指向之前存储的此文件；</p><p>由于Git在客户端上将代码仓库和完整的历史记录都镜像了下来，因此几乎一切操作都可以在本地离线进行，因此速度相当快；</p><p>Git 中所有的数据在存储前都计算校验和，然后以校验和来引用。 这意味着不可能在 Git 不知情时更改任何文件内容或目录内容。 这个功能建构在 Git 底层,若在传送过程中丢失信息或损坏文件，Git 就能发现。</p><p>Git 用以计算校验和的机制叫做 SHA-1 散列（hash，哈希）。 这是一个由 40 个十六进制字符（0-9 和 a-f）组成的字符串，基于 Git 中文件的内容或目录结构计算出来。 SHA-1 哈希看起来是这样：</p><blockquote><p>24b9da6552252987aa493b52f8696cd6d3b00373</p></blockquote><p>实际上，Git 数据库中保存的信息都是以文件内容的哈希值来索引，而不是文件名。</p><p>Git一般只添加数据，已经提交到快照的文件，难以被删除，因此说Git几乎不会执行任何可能导致文件不可恢复的操作;</p><p>Git的文件有三种状态：</p><ul><li>已提交（committed）,表示数据已经安全地保存在本地数据库中。</li><li>已修改（modified）,表示修改了文件，但还没保存到数据库中。</li><li>已暂存（staged）,表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。</li></ul><p>Git维护三颗“树”：</p><ul><li>工作目录，持有实际文件，是放在磁盘上直接被修改的工作区。</li><li>暂存区(Index&#x2F;stage,又称索引)，保存着下次将要提交的文件列表信息。</li><li>.git directory(repo)，指向最后一次提交(commit)的结果，Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，复制的就是这里的数据。</li></ul><p>一次修改后，暂存、提交并推送到远程仓库所涉及的指令如下所示：</p><h3 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a><a href="#header-3"></a>Git常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add --all //将改动的文件全部放入暂存区</span><br><span class="line">git commit -m &quot;fixsinfo&quot; //提交改动到Git仓库目录，并填写改动信息</span><br><span class="line">git push origin main //将提交的改动上传到远程仓库中</span><br></pre></td></tr></table></figure><blockquote><p>初始化一个git仓库</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><blockquote><p>创建一个新文件，并填写一些内容</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo [Random contents] &gt; [filename]</span><br></pre></td></tr></table></figure><blockquote><p>将工作区中的指定文件添加到暂存区</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add [filename]</span><br></pre></td></tr></table></figure><blockquote><p>将暂存区的文件提交到版本控制中并附描述</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;Change Description&quot;</span><br></pre></td></tr></table></figure><blockquote><p>查看文件状态</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><blockquote><p>更为紧凑的状态输出</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status -s/--short</span><br></pre></td></tr></table></figure><h1 id="A-新添加到暂存区的文件"><a href="#A-新添加到暂存区的文件" class="headerlink" title="A 新添加到暂存区的文件"></a>A 新添加到暂存区的文件</h1><h1 id="M-修改过的文件"><a href="#M-修改过的文件" class="headerlink" title="M 修改过的文件"></a>M 修改过的文件</h1><h1 id="输出有两栏，左栏表示暂存区，右栏表示工作区"><a href="#输出有两栏，左栏表示暂存区，右栏表示工作区" class="headerlink" title="输出有两栏，左栏表示暂存区，右栏表示工作区"></a>输出有两栏，左栏表示暂存区，右栏表示工作区</h1><blockquote><p>查看未暂存的已修改文件的差异</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure><blockquote><p>查看已经暂存的变化</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached/--staged</span><br></pre></td></tr></table></figure><blockquote><p>跳过暂存步骤直接提交</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -a -m &quot;Change Description&quot;</span><br></pre></td></tr></table></figure><blockquote><p>从跟踪文件清单和工作仓库中移除某个文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm [filename]</span><br></pre></td></tr></table></figure><blockquote><p>从暂存区和工作仓库移除某个文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm -f [filename]</span><br></pre></td></tr></table></figure><blockquote><p>从暂存区移除，在工作仓库中保留某个文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached [filename]</span><br></pre></td></tr></table></figure><blockquote><p>重命名文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv [name1] [name2]</span><br></pre></td></tr></table></figure><h3 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a><a href="#header-3"></a>忽略文件</h3><p>一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以创建一个名为 .gitignore 的文件，列出要忽略的文件的模式。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Distributed-is-the-new-centralized&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.ac1d.space/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="技术" scheme="https://www.ac1d.space/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Git" scheme="https://www.ac1d.space/tags/git/"/>
    
    <category term="wiki" scheme="https://www.ac1d.space/tags/wiki/"/>
    
  </entry>
  
</feed>
